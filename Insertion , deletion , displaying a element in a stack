
#include <stdio.h>
#include <stdlib.h>
#define capacity 5 

int stack[capacity] , top = -1; 

int isFull()
{
    if(top == capacity-1)
    return 1;
    else
    return 0;
}

void push(int ele)
{
    if(isFull())
    printf("Stack Overflow");
    else
    {
        stack[++top] = ele; 
        printf("Pushed data: %d",ele);
    }
}

int isEmpty()
{
    if(top == -1)
    return 1;
    else
    return 0;
}

int pop()
{
    int ele ; 
    
    if(isEmpty())
    return 0;
    else
    {
        return stack[top--];
    }
}

void peek()
{
    if(isEmpty())
    printf("Stack underflow");
    else
    printf("Stack last element is %d",stack[top]);
}

void traverse()
{
    if(isEmpty())
    printf("Stack underflow");
    else
    {
        printf("Elements are ");
        for(int i=0;i<=top;i++)
        {
            printf("%d ",stack[i]);
        }
    }
}
int main()
{
    int ch,ele,item;
   
   while(1)
   {
  printf("1) Push\n");
  printf("2) Pop\n");
  printf("3) Peek\n");
  printf("4) Traverse\n");
  printf("5) Exit\n");
  printf("Enter your choice\n");
  scanf("%d",&ch); 
  
  switch(ch)
  {
      case 1 : printf("Enter element ");
               scanf("%d",&ele);
                push(ele); 
      break;
      
      case 2 : 
       item = pop(); 
      if(!item)
      printf("Stack underflow");
      else
      printf("Popped element is %d",item);
      break;
      
      case 3 : peek();
      break;
      
      case 4 : traverse();
      break;
      
      case 5 : exit(1);
      
  }
   }
    return 0;
}
